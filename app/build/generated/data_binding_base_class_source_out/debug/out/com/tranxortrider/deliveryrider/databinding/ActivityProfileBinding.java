// Generated by view binder compiler. Do not edit!
package com.tranxortrider.deliveryrider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import com.tranxortrider.deliveryrider.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextInputEditText addressEditText;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final MaterialCardView availabilityCard;

  @NonNull
  public final TextView availabilityStatusText;

  @NonNull
  public final SwitchMaterial availabilitySwitch;

  @NonNull
  public final LayoutBottomNavigationBinding bottomNavigation;

  @NonNull
  public final MaterialButton btnBack;

  @NonNull
  public final Button btnChangePhoto;

  @NonNull
  public final MaterialButton btnSaveProfile;

  @NonNull
  public final TextInputEditText emailEditText;

  @NonNull
  public final TextInputEditText licensePlateEditText;

  @NonNull
  public final FrameLayout loadingView;

  @NonNull
  public final TextInputEditText nameEditText;

  @NonNull
  public final TextInputEditText phoneEditText;

  @NonNull
  public final ShapeableImageView profileImageView;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextInputEditText vehicleColorEditText;

  @NonNull
  public final TextInputEditText vehicleMakeEditText;

  @NonNull
  public final TextInputEditText vehicleModelEditText;

  @NonNull
  public final Spinner vehicleTypeSpinner;

  private ActivityProfileBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextInputEditText addressEditText, @NonNull AppBarLayout appBarLayout,
      @NonNull MaterialCardView availabilityCard, @NonNull TextView availabilityStatusText,
      @NonNull SwitchMaterial availabilitySwitch,
      @NonNull LayoutBottomNavigationBinding bottomNavigation, @NonNull MaterialButton btnBack,
      @NonNull Button btnChangePhoto, @NonNull MaterialButton btnSaveProfile,
      @NonNull TextInputEditText emailEditText, @NonNull TextInputEditText licensePlateEditText,
      @NonNull FrameLayout loadingView, @NonNull TextInputEditText nameEditText,
      @NonNull TextInputEditText phoneEditText, @NonNull ShapeableImageView profileImageView,
      @NonNull Toolbar toolbar, @NonNull TextInputEditText vehicleColorEditText,
      @NonNull TextInputEditText vehicleMakeEditText,
      @NonNull TextInputEditText vehicleModelEditText, @NonNull Spinner vehicleTypeSpinner) {
    this.rootView = rootView;
    this.addressEditText = addressEditText;
    this.appBarLayout = appBarLayout;
    this.availabilityCard = availabilityCard;
    this.availabilityStatusText = availabilityStatusText;
    this.availabilitySwitch = availabilitySwitch;
    this.bottomNavigation = bottomNavigation;
    this.btnBack = btnBack;
    this.btnChangePhoto = btnChangePhoto;
    this.btnSaveProfile = btnSaveProfile;
    this.emailEditText = emailEditText;
    this.licensePlateEditText = licensePlateEditText;
    this.loadingView = loadingView;
    this.nameEditText = nameEditText;
    this.phoneEditText = phoneEditText;
    this.profileImageView = profileImageView;
    this.toolbar = toolbar;
    this.vehicleColorEditText = vehicleColorEditText;
    this.vehicleMakeEditText = vehicleMakeEditText;
    this.vehicleModelEditText = vehicleModelEditText;
    this.vehicleTypeSpinner = vehicleTypeSpinner;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressEditText;
      TextInputEditText addressEditText = ViewBindings.findChildViewById(rootView, id);
      if (addressEditText == null) {
        break missingId;
      }

      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.availabilityCard;
      MaterialCardView availabilityCard = ViewBindings.findChildViewById(rootView, id);
      if (availabilityCard == null) {
        break missingId;
      }

      id = R.id.availabilityStatusText;
      TextView availabilityStatusText = ViewBindings.findChildViewById(rootView, id);
      if (availabilityStatusText == null) {
        break missingId;
      }

      id = R.id.availabilitySwitch;
      SwitchMaterial availabilitySwitch = ViewBindings.findChildViewById(rootView, id);
      if (availabilitySwitch == null) {
        break missingId;
      }

      id = R.id.bottomNavigation;
      View bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }
      LayoutBottomNavigationBinding binding_bottomNavigation = LayoutBottomNavigationBinding.bind(bottomNavigation);

      id = R.id.btnBack;
      MaterialButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnChangePhoto;
      Button btnChangePhoto = ViewBindings.findChildViewById(rootView, id);
      if (btnChangePhoto == null) {
        break missingId;
      }

      id = R.id.btnSaveProfile;
      MaterialButton btnSaveProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveProfile == null) {
        break missingId;
      }

      id = R.id.emailEditText;
      TextInputEditText emailEditText = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText == null) {
        break missingId;
      }

      id = R.id.licensePlateEditText;
      TextInputEditText licensePlateEditText = ViewBindings.findChildViewById(rootView, id);
      if (licensePlateEditText == null) {
        break missingId;
      }

      id = R.id.loadingView;
      FrameLayout loadingView = ViewBindings.findChildViewById(rootView, id);
      if (loadingView == null) {
        break missingId;
      }

      id = R.id.nameEditText;
      TextInputEditText nameEditText = ViewBindings.findChildViewById(rootView, id);
      if (nameEditText == null) {
        break missingId;
      }

      id = R.id.phoneEditText;
      TextInputEditText phoneEditText = ViewBindings.findChildViewById(rootView, id);
      if (phoneEditText == null) {
        break missingId;
      }

      id = R.id.profileImageView;
      ShapeableImageView profileImageView = ViewBindings.findChildViewById(rootView, id);
      if (profileImageView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.vehicleColorEditText;
      TextInputEditText vehicleColorEditText = ViewBindings.findChildViewById(rootView, id);
      if (vehicleColorEditText == null) {
        break missingId;
      }

      id = R.id.vehicleMakeEditText;
      TextInputEditText vehicleMakeEditText = ViewBindings.findChildViewById(rootView, id);
      if (vehicleMakeEditText == null) {
        break missingId;
      }

      id = R.id.vehicleModelEditText;
      TextInputEditText vehicleModelEditText = ViewBindings.findChildViewById(rootView, id);
      if (vehicleModelEditText == null) {
        break missingId;
      }

      id = R.id.vehicleTypeSpinner;
      Spinner vehicleTypeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (vehicleTypeSpinner == null) {
        break missingId;
      }

      return new ActivityProfileBinding((CoordinatorLayout) rootView, addressEditText, appBarLayout,
          availabilityCard, availabilityStatusText, availabilitySwitch, binding_bottomNavigation,
          btnBack, btnChangePhoto, btnSaveProfile, emailEditText, licensePlateEditText, loadingView,
          nameEditText, phoneEditText, profileImageView, toolbar, vehicleColorEditText,
          vehicleMakeEditText, vehicleModelEditText, vehicleTypeSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
