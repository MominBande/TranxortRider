// Generated by view binder compiler. Do not edit!
package com.tranxortrider.deliveryrider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textfield.TextInputEditText;
import com.tranxortrider.deliveryrider.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpErrorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView appLogo;

  @NonNull
  public final TextInputEditText emailEditText;

  @NonNull
  public final TextView errorMessage;

  @NonNull
  public final TextView instructionText;

  @NonNull
  public final MaterialButton signUpButton;

  @NonNull
  public final MaterialCheckBox termsCheckBox;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final View topBackground;

  private ActivitySignUpErrorBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView appLogo,
      @NonNull TextInputEditText emailEditText, @NonNull TextView errorMessage,
      @NonNull TextView instructionText, @NonNull MaterialButton signUpButton,
      @NonNull MaterialCheckBox termsCheckBox, @NonNull TextView titleText,
      @NonNull View topBackground) {
    this.rootView = rootView;
    this.appLogo = appLogo;
    this.emailEditText = emailEditText;
    this.errorMessage = errorMessage;
    this.instructionText = instructionText;
    this.signUpButton = signUpButton;
    this.termsCheckBox = termsCheckBox;
    this.titleText = titleText;
    this.topBackground = topBackground;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpErrorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpErrorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up_error, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpErrorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appLogo;
      ImageView appLogo = ViewBindings.findChildViewById(rootView, id);
      if (appLogo == null) {
        break missingId;
      }

      id = R.id.emailEditText;
      TextInputEditText emailEditText = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText == null) {
        break missingId;
      }

      id = R.id.errorMessage;
      TextView errorMessage = ViewBindings.findChildViewById(rootView, id);
      if (errorMessage == null) {
        break missingId;
      }

      id = R.id.instructionText;
      TextView instructionText = ViewBindings.findChildViewById(rootView, id);
      if (instructionText == null) {
        break missingId;
      }

      id = R.id.signUpButton;
      MaterialButton signUpButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpButton == null) {
        break missingId;
      }

      id = R.id.termsCheckBox;
      MaterialCheckBox termsCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (termsCheckBox == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.topBackground;
      View topBackground = ViewBindings.findChildViewById(rootView, id);
      if (topBackground == null) {
        break missingId;
      }

      return new ActivitySignUpErrorBinding((ConstraintLayout) rootView, appLogo, emailEditText,
          errorMessage, instructionText, signUpButton, termsCheckBox, titleText, topBackground);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
