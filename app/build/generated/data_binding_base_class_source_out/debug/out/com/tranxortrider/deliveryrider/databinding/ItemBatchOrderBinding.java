// Generated by view binder compiler. Do not edit!
package com.tranxortrider.deliveryrider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.tranxortrider.deliveryrider.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBatchOrderBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton btnRemove;

  @NonNull
  public final MaterialCardView orderCard;

  @NonNull
  public final TextView tvOrderInfo;

  @NonNull
  public final TextView tvOrderNumber;

  @NonNull
  public final TextView tvRestaurantName;

  @NonNull
  public final TextView tvSequence;

  private ItemBatchOrderBinding(@NonNull MaterialCardView rootView, @NonNull ImageButton btnRemove,
      @NonNull MaterialCardView orderCard, @NonNull TextView tvOrderInfo,
      @NonNull TextView tvOrderNumber, @NonNull TextView tvRestaurantName,
      @NonNull TextView tvSequence) {
    this.rootView = rootView;
    this.btnRemove = btnRemove;
    this.orderCard = orderCard;
    this.tvOrderInfo = tvOrderInfo;
    this.tvOrderNumber = tvOrderNumber;
    this.tvRestaurantName = tvRestaurantName;
    this.tvSequence = tvSequence;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBatchOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBatchOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_batch_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBatchOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRemove;
      ImageButton btnRemove = ViewBindings.findChildViewById(rootView, id);
      if (btnRemove == null) {
        break missingId;
      }

      MaterialCardView orderCard = (MaterialCardView) rootView;

      id = R.id.tvOrderInfo;
      TextView tvOrderInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderInfo == null) {
        break missingId;
      }

      id = R.id.tvOrderNumber;
      TextView tvOrderNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderNumber == null) {
        break missingId;
      }

      id = R.id.tvRestaurantName;
      TextView tvRestaurantName = ViewBindings.findChildViewById(rootView, id);
      if (tvRestaurantName == null) {
        break missingId;
      }

      id = R.id.tvSequence;
      TextView tvSequence = ViewBindings.findChildViewById(rootView, id);
      if (tvSequence == null) {
        break missingId;
      }

      return new ItemBatchOrderBinding((MaterialCardView) rootView, btnRemove, orderCard,
          tvOrderInfo, tvOrderNumber, tvRestaurantName, tvSequence);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
