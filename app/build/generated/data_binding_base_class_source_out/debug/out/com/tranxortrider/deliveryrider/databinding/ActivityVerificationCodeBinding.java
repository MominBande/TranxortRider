// Generated by view binder compiler. Do not edit!
package com.tranxortrider.deliveryrider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.tranxortrider.deliveryrider.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVerificationCodeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView appLogo;

  @NonNull
  public final TextInputEditText codeEditText;

  @NonNull
  public final TextView countdownTimerText;

  @NonNull
  public final TextView emailText;

  @NonNull
  public final TextView instructionText;

  @NonNull
  public final MaterialButton resendButton;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final View topBackground;

  @NonNull
  public final MaterialButton verifyButton;

  private ActivityVerificationCodeBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView appLogo, @NonNull TextInputEditText codeEditText,
      @NonNull TextView countdownTimerText, @NonNull TextView emailText,
      @NonNull TextView instructionText, @NonNull MaterialButton resendButton,
      @NonNull TextView titleText, @NonNull View topBackground,
      @NonNull MaterialButton verifyButton) {
    this.rootView = rootView;
    this.appLogo = appLogo;
    this.codeEditText = codeEditText;
    this.countdownTimerText = countdownTimerText;
    this.emailText = emailText;
    this.instructionText = instructionText;
    this.resendButton = resendButton;
    this.titleText = titleText;
    this.topBackground = topBackground;
    this.verifyButton = verifyButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVerificationCodeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVerificationCodeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_verification_code, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVerificationCodeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appLogo;
      ImageView appLogo = ViewBindings.findChildViewById(rootView, id);
      if (appLogo == null) {
        break missingId;
      }

      id = R.id.codeEditText;
      TextInputEditText codeEditText = ViewBindings.findChildViewById(rootView, id);
      if (codeEditText == null) {
        break missingId;
      }

      id = R.id.countdownTimerText;
      TextView countdownTimerText = ViewBindings.findChildViewById(rootView, id);
      if (countdownTimerText == null) {
        break missingId;
      }

      id = R.id.emailText;
      TextView emailText = ViewBindings.findChildViewById(rootView, id);
      if (emailText == null) {
        break missingId;
      }

      id = R.id.instructionText;
      TextView instructionText = ViewBindings.findChildViewById(rootView, id);
      if (instructionText == null) {
        break missingId;
      }

      id = R.id.resendButton;
      MaterialButton resendButton = ViewBindings.findChildViewById(rootView, id);
      if (resendButton == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.topBackground;
      View topBackground = ViewBindings.findChildViewById(rootView, id);
      if (topBackground == null) {
        break missingId;
      }

      id = R.id.verifyButton;
      MaterialButton verifyButton = ViewBindings.findChildViewById(rootView, id);
      if (verifyButton == null) {
        break missingId;
      }

      return new ActivityVerificationCodeBinding((ConstraintLayout) rootView, appLogo, codeEditText,
          countdownTimerText, emailText, instructionText, resendButton, titleText, topBackground,
          verifyButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
