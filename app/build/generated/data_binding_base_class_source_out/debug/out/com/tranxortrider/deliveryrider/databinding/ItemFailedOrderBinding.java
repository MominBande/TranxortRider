// Generated by view binder compiler. Do not edit!
package com.tranxortrider.deliveryrider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.tranxortrider.deliveryrider.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFailedOrderBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final LinearLayout actionButtons;

  @NonNull
  public final ImageView btnCall;

  @NonNull
  public final ImageView btnMessage;

  @NonNull
  public final ImageView btnNavigate;

  @NonNull
  public final MaterialButton btnRetry;

  @NonNull
  public final MaterialCardView callCardView;

  @NonNull
  public final MaterialCardView deliveryMarkerCard;

  @NonNull
  public final View divider;

  @NonNull
  public final ConstraintLayout locationsSection;

  @NonNull
  public final MaterialCardView messageCardView;

  @NonNull
  public final MaterialCardView navigateCardView;

  @NonNull
  public final LinearLayout orderIdSection;

  @NonNull
  public final MaterialCardView pickupMarkerCard;

  @NonNull
  public final View routeLine;

  @NonNull
  public final LinearLayout statusSection;

  @NonNull
  public final MaterialCardView tapToOpenCard;

  @NonNull
  public final MaterialCardView timeCardView;

  @NonNull
  public final TextView tvDeliveryAddress;

  @NonNull
  public final TextView tvDeliveryMarker;

  @NonNull
  public final TextView tvDeliveryTime;

  @NonNull
  public final TextView tvOrderId;

  @NonNull
  public final TextView tvOrderStatus;

  @NonNull
  public final TextView tvOrderType;

  @NonNull
  public final TextView tvPaymentAmount;

  @NonNull
  public final TextView tvPickupAddress;

  @NonNull
  public final TextView tvPickupMarker;

  @NonNull
  public final TextView tvTapToOpen;

  @NonNull
  public final TextView tvToLabel;

  private ItemFailedOrderBinding(@NonNull MaterialCardView rootView,
      @NonNull LinearLayout actionButtons, @NonNull ImageView btnCall,
      @NonNull ImageView btnMessage, @NonNull ImageView btnNavigate,
      @NonNull MaterialButton btnRetry, @NonNull MaterialCardView callCardView,
      @NonNull MaterialCardView deliveryMarkerCard, @NonNull View divider,
      @NonNull ConstraintLayout locationsSection, @NonNull MaterialCardView messageCardView,
      @NonNull MaterialCardView navigateCardView, @NonNull LinearLayout orderIdSection,
      @NonNull MaterialCardView pickupMarkerCard, @NonNull View routeLine,
      @NonNull LinearLayout statusSection, @NonNull MaterialCardView tapToOpenCard,
      @NonNull MaterialCardView timeCardView, @NonNull TextView tvDeliveryAddress,
      @NonNull TextView tvDeliveryMarker, @NonNull TextView tvDeliveryTime,
      @NonNull TextView tvOrderId, @NonNull TextView tvOrderStatus, @NonNull TextView tvOrderType,
      @NonNull TextView tvPaymentAmount, @NonNull TextView tvPickupAddress,
      @NonNull TextView tvPickupMarker, @NonNull TextView tvTapToOpen,
      @NonNull TextView tvToLabel) {
    this.rootView = rootView;
    this.actionButtons = actionButtons;
    this.btnCall = btnCall;
    this.btnMessage = btnMessage;
    this.btnNavigate = btnNavigate;
    this.btnRetry = btnRetry;
    this.callCardView = callCardView;
    this.deliveryMarkerCard = deliveryMarkerCard;
    this.divider = divider;
    this.locationsSection = locationsSection;
    this.messageCardView = messageCardView;
    this.navigateCardView = navigateCardView;
    this.orderIdSection = orderIdSection;
    this.pickupMarkerCard = pickupMarkerCard;
    this.routeLine = routeLine;
    this.statusSection = statusSection;
    this.tapToOpenCard = tapToOpenCard;
    this.timeCardView = timeCardView;
    this.tvDeliveryAddress = tvDeliveryAddress;
    this.tvDeliveryMarker = tvDeliveryMarker;
    this.tvDeliveryTime = tvDeliveryTime;
    this.tvOrderId = tvOrderId;
    this.tvOrderStatus = tvOrderStatus;
    this.tvOrderType = tvOrderType;
    this.tvPaymentAmount = tvPaymentAmount;
    this.tvPickupAddress = tvPickupAddress;
    this.tvPickupMarker = tvPickupMarker;
    this.tvTapToOpen = tvTapToOpen;
    this.tvToLabel = tvToLabel;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFailedOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFailedOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_failed_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFailedOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionButtons;
      LinearLayout actionButtons = ViewBindings.findChildViewById(rootView, id);
      if (actionButtons == null) {
        break missingId;
      }

      id = R.id.btnCall;
      ImageView btnCall = ViewBindings.findChildViewById(rootView, id);
      if (btnCall == null) {
        break missingId;
      }

      id = R.id.btnMessage;
      ImageView btnMessage = ViewBindings.findChildViewById(rootView, id);
      if (btnMessage == null) {
        break missingId;
      }

      id = R.id.btnNavigate;
      ImageView btnNavigate = ViewBindings.findChildViewById(rootView, id);
      if (btnNavigate == null) {
        break missingId;
      }

      id = R.id.btnRetry;
      MaterialButton btnRetry = ViewBindings.findChildViewById(rootView, id);
      if (btnRetry == null) {
        break missingId;
      }

      id = R.id.callCardView;
      MaterialCardView callCardView = ViewBindings.findChildViewById(rootView, id);
      if (callCardView == null) {
        break missingId;
      }

      id = R.id.deliveryMarkerCard;
      MaterialCardView deliveryMarkerCard = ViewBindings.findChildViewById(rootView, id);
      if (deliveryMarkerCard == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.locationsSection;
      ConstraintLayout locationsSection = ViewBindings.findChildViewById(rootView, id);
      if (locationsSection == null) {
        break missingId;
      }

      id = R.id.messageCardView;
      MaterialCardView messageCardView = ViewBindings.findChildViewById(rootView, id);
      if (messageCardView == null) {
        break missingId;
      }

      id = R.id.navigateCardView;
      MaterialCardView navigateCardView = ViewBindings.findChildViewById(rootView, id);
      if (navigateCardView == null) {
        break missingId;
      }

      id = R.id.orderIdSection;
      LinearLayout orderIdSection = ViewBindings.findChildViewById(rootView, id);
      if (orderIdSection == null) {
        break missingId;
      }

      id = R.id.pickupMarkerCard;
      MaterialCardView pickupMarkerCard = ViewBindings.findChildViewById(rootView, id);
      if (pickupMarkerCard == null) {
        break missingId;
      }

      id = R.id.routeLine;
      View routeLine = ViewBindings.findChildViewById(rootView, id);
      if (routeLine == null) {
        break missingId;
      }

      id = R.id.statusSection;
      LinearLayout statusSection = ViewBindings.findChildViewById(rootView, id);
      if (statusSection == null) {
        break missingId;
      }

      id = R.id.tapToOpenCard;
      MaterialCardView tapToOpenCard = ViewBindings.findChildViewById(rootView, id);
      if (tapToOpenCard == null) {
        break missingId;
      }

      id = R.id.timeCardView;
      MaterialCardView timeCardView = ViewBindings.findChildViewById(rootView, id);
      if (timeCardView == null) {
        break missingId;
      }

      id = R.id.tvDeliveryAddress;
      TextView tvDeliveryAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvDeliveryAddress == null) {
        break missingId;
      }

      id = R.id.tvDeliveryMarker;
      TextView tvDeliveryMarker = ViewBindings.findChildViewById(rootView, id);
      if (tvDeliveryMarker == null) {
        break missingId;
      }

      id = R.id.tvDeliveryTime;
      TextView tvDeliveryTime = ViewBindings.findChildViewById(rootView, id);
      if (tvDeliveryTime == null) {
        break missingId;
      }

      id = R.id.tvOrderId;
      TextView tvOrderId = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderId == null) {
        break missingId;
      }

      id = R.id.tvOrderStatus;
      TextView tvOrderStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderStatus == null) {
        break missingId;
      }

      id = R.id.tvOrderType;
      TextView tvOrderType = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderType == null) {
        break missingId;
      }

      id = R.id.tvPaymentAmount;
      TextView tvPaymentAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvPaymentAmount == null) {
        break missingId;
      }

      id = R.id.tvPickupAddress;
      TextView tvPickupAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvPickupAddress == null) {
        break missingId;
      }

      id = R.id.tvPickupMarker;
      TextView tvPickupMarker = ViewBindings.findChildViewById(rootView, id);
      if (tvPickupMarker == null) {
        break missingId;
      }

      id = R.id.tvTapToOpen;
      TextView tvTapToOpen = ViewBindings.findChildViewById(rootView, id);
      if (tvTapToOpen == null) {
        break missingId;
      }

      id = R.id.tvToLabel;
      TextView tvToLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvToLabel == null) {
        break missingId;
      }

      return new ItemFailedOrderBinding((MaterialCardView) rootView, actionButtons, btnCall,
          btnMessage, btnNavigate, btnRetry, callCardView, deliveryMarkerCard, divider,
          locationsSection, messageCardView, navigateCardView, orderIdSection, pickupMarkerCard,
          routeLine, statusSection, tapToOpenCard, timeCardView, tvDeliveryAddress,
          tvDeliveryMarker, tvDeliveryTime, tvOrderId, tvOrderStatus, tvOrderType, tvPaymentAmount,
          tvPickupAddress, tvPickupMarker, tvTapToOpen, tvToLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
