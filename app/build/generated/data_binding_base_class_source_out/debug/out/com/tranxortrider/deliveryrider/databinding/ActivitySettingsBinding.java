// Generated by view binder compiler. Do not edit!
package com.tranxortrider.deliveryrider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.slider.Slider;
import com.tranxortrider.deliveryrider.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialCardView accentColorCard1;

  @NonNull
  public final MaterialCardView accentColorCard2;

  @NonNull
  public final MaterialCardView accentColorCard3;

  @NonNull
  public final MaterialCardView accentColorCard4;

  @NonNull
  public final MaterialCardView accentColorCard5;

  @NonNull
  public final MaterialButton btnBack;

  @NonNull
  public final RadioButton darkModeRadio;

  @NonNull
  public final CardView emergencySOSCard;

  @NonNull
  public final TextView fontPreviewText;

  @NonNull
  public final Slider fontSizeSlider;

  @NonNull
  public final TextView fontSizeValue;

  @NonNull
  public final CardView helpCenterCard;

  @NonNull
  public final RadioButton lightModeRadio;

  @NonNull
  public final Button logoutButton;

  @NonNull
  public final CardView notificationsCard;

  @NonNull
  public final CardView profileCard;

  @NonNull
  public final RadioButton systemDefaultRadio;

  @NonNull
  public final RadioGroup themeRadioGroup;

  @NonNull
  public final RelativeLayout topBar;

  private ActivitySettingsBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialCardView accentColorCard1, @NonNull MaterialCardView accentColorCard2,
      @NonNull MaterialCardView accentColorCard3, @NonNull MaterialCardView accentColorCard4,
      @NonNull MaterialCardView accentColorCard5, @NonNull MaterialButton btnBack,
      @NonNull RadioButton darkModeRadio, @NonNull CardView emergencySOSCard,
      @NonNull TextView fontPreviewText, @NonNull Slider fontSizeSlider,
      @NonNull TextView fontSizeValue, @NonNull CardView helpCenterCard,
      @NonNull RadioButton lightModeRadio, @NonNull Button logoutButton,
      @NonNull CardView notificationsCard, @NonNull CardView profileCard,
      @NonNull RadioButton systemDefaultRadio, @NonNull RadioGroup themeRadioGroup,
      @NonNull RelativeLayout topBar) {
    this.rootView = rootView;
    this.accentColorCard1 = accentColorCard1;
    this.accentColorCard2 = accentColorCard2;
    this.accentColorCard3 = accentColorCard3;
    this.accentColorCard4 = accentColorCard4;
    this.accentColorCard5 = accentColorCard5;
    this.btnBack = btnBack;
    this.darkModeRadio = darkModeRadio;
    this.emergencySOSCard = emergencySOSCard;
    this.fontPreviewText = fontPreviewText;
    this.fontSizeSlider = fontSizeSlider;
    this.fontSizeValue = fontSizeValue;
    this.helpCenterCard = helpCenterCard;
    this.lightModeRadio = lightModeRadio;
    this.logoutButton = logoutButton;
    this.notificationsCard = notificationsCard;
    this.profileCard = profileCard;
    this.systemDefaultRadio = systemDefaultRadio;
    this.themeRadioGroup = themeRadioGroup;
    this.topBar = topBar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accentColorCard1;
      MaterialCardView accentColorCard1 = ViewBindings.findChildViewById(rootView, id);
      if (accentColorCard1 == null) {
        break missingId;
      }

      id = R.id.accentColorCard2;
      MaterialCardView accentColorCard2 = ViewBindings.findChildViewById(rootView, id);
      if (accentColorCard2 == null) {
        break missingId;
      }

      id = R.id.accentColorCard3;
      MaterialCardView accentColorCard3 = ViewBindings.findChildViewById(rootView, id);
      if (accentColorCard3 == null) {
        break missingId;
      }

      id = R.id.accentColorCard4;
      MaterialCardView accentColorCard4 = ViewBindings.findChildViewById(rootView, id);
      if (accentColorCard4 == null) {
        break missingId;
      }

      id = R.id.accentColorCard5;
      MaterialCardView accentColorCard5 = ViewBindings.findChildViewById(rootView, id);
      if (accentColorCard5 == null) {
        break missingId;
      }

      id = R.id.btnBack;
      MaterialButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.darkModeRadio;
      RadioButton darkModeRadio = ViewBindings.findChildViewById(rootView, id);
      if (darkModeRadio == null) {
        break missingId;
      }

      id = R.id.emergencySOSCard;
      CardView emergencySOSCard = ViewBindings.findChildViewById(rootView, id);
      if (emergencySOSCard == null) {
        break missingId;
      }

      id = R.id.fontPreviewText;
      TextView fontPreviewText = ViewBindings.findChildViewById(rootView, id);
      if (fontPreviewText == null) {
        break missingId;
      }

      id = R.id.fontSizeSlider;
      Slider fontSizeSlider = ViewBindings.findChildViewById(rootView, id);
      if (fontSizeSlider == null) {
        break missingId;
      }

      id = R.id.fontSizeValue;
      TextView fontSizeValue = ViewBindings.findChildViewById(rootView, id);
      if (fontSizeValue == null) {
        break missingId;
      }

      id = R.id.helpCenterCard;
      CardView helpCenterCard = ViewBindings.findChildViewById(rootView, id);
      if (helpCenterCard == null) {
        break missingId;
      }

      id = R.id.lightModeRadio;
      RadioButton lightModeRadio = ViewBindings.findChildViewById(rootView, id);
      if (lightModeRadio == null) {
        break missingId;
      }

      id = R.id.logoutButton;
      Button logoutButton = ViewBindings.findChildViewById(rootView, id);
      if (logoutButton == null) {
        break missingId;
      }

      id = R.id.notificationsCard;
      CardView notificationsCard = ViewBindings.findChildViewById(rootView, id);
      if (notificationsCard == null) {
        break missingId;
      }

      id = R.id.profileCard;
      CardView profileCard = ViewBindings.findChildViewById(rootView, id);
      if (profileCard == null) {
        break missingId;
      }

      id = R.id.systemDefaultRadio;
      RadioButton systemDefaultRadio = ViewBindings.findChildViewById(rootView, id);
      if (systemDefaultRadio == null) {
        break missingId;
      }

      id = R.id.themeRadioGroup;
      RadioGroup themeRadioGroup = ViewBindings.findChildViewById(rootView, id);
      if (themeRadioGroup == null) {
        break missingId;
      }

      id = R.id.topBar;
      RelativeLayout topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((RelativeLayout) rootView, accentColorCard1,
          accentColorCard2, accentColorCard3, accentColorCard4, accentColorCard5, btnBack,
          darkModeRadio, emergencySOSCard, fontPreviewText, fontSizeSlider, fontSizeValue,
          helpCenterCard, lightModeRadio, logoutButton, notificationsCard, profileCard,
          systemDefaultRadio, themeRadioGroup, topBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
