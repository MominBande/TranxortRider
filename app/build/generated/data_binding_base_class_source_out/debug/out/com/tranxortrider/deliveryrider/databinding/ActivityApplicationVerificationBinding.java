// Generated by view binder compiler. Do not edit!
package com.tranxortrider.deliveryrider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tranxortrider.deliveryrider.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityApplicationVerificationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button contactUsButton;

  @NonNull
  public final TextView driverLicenseStatusText;

  @NonNull
  public final TextView estimatedTimeText;

  @NonNull
  public final TextView governmentIdStatusText;

  @NonNull
  public final CardView headerCard;

  @NonNull
  public final TextView messageText;

  @NonNull
  public final Button reuploadButton;

  @NonNull
  public final CardView statusCard;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final TextView workAuthorizationStatusText;

  private ActivityApplicationVerificationBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button contactUsButton, @NonNull TextView driverLicenseStatusText,
      @NonNull TextView estimatedTimeText, @NonNull TextView governmentIdStatusText,
      @NonNull CardView headerCard, @NonNull TextView messageText, @NonNull Button reuploadButton,
      @NonNull CardView statusCard, @NonNull TextView titleText,
      @NonNull TextView workAuthorizationStatusText) {
    this.rootView = rootView;
    this.contactUsButton = contactUsButton;
    this.driverLicenseStatusText = driverLicenseStatusText;
    this.estimatedTimeText = estimatedTimeText;
    this.governmentIdStatusText = governmentIdStatusText;
    this.headerCard = headerCard;
    this.messageText = messageText;
    this.reuploadButton = reuploadButton;
    this.statusCard = statusCard;
    this.titleText = titleText;
    this.workAuthorizationStatusText = workAuthorizationStatusText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityApplicationVerificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityApplicationVerificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_application_verification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityApplicationVerificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contactUsButton;
      Button contactUsButton = ViewBindings.findChildViewById(rootView, id);
      if (contactUsButton == null) {
        break missingId;
      }

      id = R.id.driverLicenseStatusText;
      TextView driverLicenseStatusText = ViewBindings.findChildViewById(rootView, id);
      if (driverLicenseStatusText == null) {
        break missingId;
      }

      id = R.id.estimatedTimeText;
      TextView estimatedTimeText = ViewBindings.findChildViewById(rootView, id);
      if (estimatedTimeText == null) {
        break missingId;
      }

      id = R.id.governmentIdStatusText;
      TextView governmentIdStatusText = ViewBindings.findChildViewById(rootView, id);
      if (governmentIdStatusText == null) {
        break missingId;
      }

      id = R.id.headerCard;
      CardView headerCard = ViewBindings.findChildViewById(rootView, id);
      if (headerCard == null) {
        break missingId;
      }

      id = R.id.messageText;
      TextView messageText = ViewBindings.findChildViewById(rootView, id);
      if (messageText == null) {
        break missingId;
      }

      id = R.id.reuploadButton;
      Button reuploadButton = ViewBindings.findChildViewById(rootView, id);
      if (reuploadButton == null) {
        break missingId;
      }

      id = R.id.statusCard;
      CardView statusCard = ViewBindings.findChildViewById(rootView, id);
      if (statusCard == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.workAuthorizationStatusText;
      TextView workAuthorizationStatusText = ViewBindings.findChildViewById(rootView, id);
      if (workAuthorizationStatusText == null) {
        break missingId;
      }

      return new ActivityApplicationVerificationBinding((ConstraintLayout) rootView,
          contactUsButton, driverLicenseStatusText, estimatedTimeText, governmentIdStatusText,
          headerCard, messageText, reuploadButton, statusCard, titleText,
          workAuthorizationStatusText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
