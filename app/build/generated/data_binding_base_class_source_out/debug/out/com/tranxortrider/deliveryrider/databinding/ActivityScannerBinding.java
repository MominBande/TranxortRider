// Generated by view binder compiler. Do not edit!
package com.tranxortrider.deliveryrider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.button.MaterialButton;
import com.tranxortrider.deliveryrider.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityScannerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout bottomControls;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final MaterialButton btnClose;

  @NonNull
  public final MaterialButton btnFlash;

  @NonNull
  public final MaterialButton btnManualEntry;

  @NonNull
  public final FrameLayout loadingView;

  @NonNull
  public final PreviewView previewView;

  @NonNull
  public final TextView scanInstructionsText;

  @NonNull
  public final ImageView scannerIndicator;

  @NonNull
  public final View scannerOverlay;

  @NonNull
  public final RelativeLayout topControls;

  private ActivityScannerBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout bottomControls, @NonNull BottomNavigationView bottomNavigation,
      @NonNull MaterialButton btnClose, @NonNull MaterialButton btnFlash,
      @NonNull MaterialButton btnManualEntry, @NonNull FrameLayout loadingView,
      @NonNull PreviewView previewView, @NonNull TextView scanInstructionsText,
      @NonNull ImageView scannerIndicator, @NonNull View scannerOverlay,
      @NonNull RelativeLayout topControls) {
    this.rootView = rootView;
    this.bottomControls = bottomControls;
    this.bottomNavigation = bottomNavigation;
    this.btnClose = btnClose;
    this.btnFlash = btnFlash;
    this.btnManualEntry = btnManualEntry;
    this.loadingView = loadingView;
    this.previewView = previewView;
    this.scanInstructionsText = scanInstructionsText;
    this.scannerIndicator = scannerIndicator;
    this.scannerOverlay = scannerOverlay;
    this.topControls = topControls;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityScannerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityScannerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_scanner, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityScannerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomControls;
      LinearLayout bottomControls = ViewBindings.findChildViewById(rootView, id);
      if (bottomControls == null) {
        break missingId;
      }

      id = R.id.bottomNavigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.btnClose;
      MaterialButton btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btnFlash;
      MaterialButton btnFlash = ViewBindings.findChildViewById(rootView, id);
      if (btnFlash == null) {
        break missingId;
      }

      id = R.id.btnManualEntry;
      MaterialButton btnManualEntry = ViewBindings.findChildViewById(rootView, id);
      if (btnManualEntry == null) {
        break missingId;
      }

      id = R.id.loadingView;
      FrameLayout loadingView = ViewBindings.findChildViewById(rootView, id);
      if (loadingView == null) {
        break missingId;
      }

      id = R.id.previewView;
      PreviewView previewView = ViewBindings.findChildViewById(rootView, id);
      if (previewView == null) {
        break missingId;
      }

      id = R.id.scanInstructionsText;
      TextView scanInstructionsText = ViewBindings.findChildViewById(rootView, id);
      if (scanInstructionsText == null) {
        break missingId;
      }

      id = R.id.scannerIndicator;
      ImageView scannerIndicator = ViewBindings.findChildViewById(rootView, id);
      if (scannerIndicator == null) {
        break missingId;
      }

      id = R.id.scannerOverlay;
      View scannerOverlay = ViewBindings.findChildViewById(rootView, id);
      if (scannerOverlay == null) {
        break missingId;
      }

      id = R.id.topControls;
      RelativeLayout topControls = ViewBindings.findChildViewById(rootView, id);
      if (topControls == null) {
        break missingId;
      }

      return new ActivityScannerBinding((RelativeLayout) rootView, bottomControls, bottomNavigation,
          btnClose, btnFlash, btnManualEntry, loadingView, previewView, scanInstructionsText,
          scannerIndicator, scannerOverlay, topControls);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
