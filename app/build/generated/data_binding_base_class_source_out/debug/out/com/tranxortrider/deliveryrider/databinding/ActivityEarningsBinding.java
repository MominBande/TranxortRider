// Generated by view binder compiler. Do not edit!
package com.tranxortrider.deliveryrider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.LineChart;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.tranxortrider.deliveryrider.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEarningsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LayoutBottomNavigationBinding bottomNavigation;

  @NonNull
  public final ConstraintLayout contentView;

  @NonNull
  public final TextView earningTimeframeText;

  @NonNull
  public final ConstraintLayout earningsCards;

  @NonNull
  public final MaterialCardView earningsHistoryCard;

  @NonNull
  public final RecyclerView earningsHistoryRecyclerView;

  @NonNull
  public final TextView earningsHistoryTitle;

  @NonNull
  public final MaterialCardView earningsSummaryCard;

  @NonNull
  public final TextView errorMessageText;

  @NonNull
  public final LinearLayout errorView;

  @NonNull
  public final FrameLayout loadingView;

  @NonNull
  public final MaterialCardView pendingEarningsCard;

  @NonNull
  public final TextView pendingEarningsText;

  @NonNull
  public final Button retryButton;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final MaterialCardView todayEarningsCard;

  @NonNull
  public final TextView todayEarningsText;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView totalEarningsText;

  @NonNull
  public final MaterialButton viewAllButton;

  @NonNull
  public final MaterialCardView weeklyChartCard;

  @NonNull
  public final LineChart weeklyEarningsChart;

  @NonNull
  public final TextView weeklyEarningsText;

  private ActivityEarningsBinding(@NonNull ConstraintLayout rootView,
      @NonNull LayoutBottomNavigationBinding bottomNavigation,
      @NonNull ConstraintLayout contentView, @NonNull TextView earningTimeframeText,
      @NonNull ConstraintLayout earningsCards, @NonNull MaterialCardView earningsHistoryCard,
      @NonNull RecyclerView earningsHistoryRecyclerView, @NonNull TextView earningsHistoryTitle,
      @NonNull MaterialCardView earningsSummaryCard, @NonNull TextView errorMessageText,
      @NonNull LinearLayout errorView, @NonNull FrameLayout loadingView,
      @NonNull MaterialCardView pendingEarningsCard, @NonNull TextView pendingEarningsText,
      @NonNull Button retryButton, @NonNull NestedScrollView scrollView,
      @NonNull MaterialCardView todayEarningsCard, @NonNull TextView todayEarningsText,
      @NonNull Toolbar toolbar, @NonNull TextView totalEarningsText,
      @NonNull MaterialButton viewAllButton, @NonNull MaterialCardView weeklyChartCard,
      @NonNull LineChart weeklyEarningsChart, @NonNull TextView weeklyEarningsText) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.contentView = contentView;
    this.earningTimeframeText = earningTimeframeText;
    this.earningsCards = earningsCards;
    this.earningsHistoryCard = earningsHistoryCard;
    this.earningsHistoryRecyclerView = earningsHistoryRecyclerView;
    this.earningsHistoryTitle = earningsHistoryTitle;
    this.earningsSummaryCard = earningsSummaryCard;
    this.errorMessageText = errorMessageText;
    this.errorView = errorView;
    this.loadingView = loadingView;
    this.pendingEarningsCard = pendingEarningsCard;
    this.pendingEarningsText = pendingEarningsText;
    this.retryButton = retryButton;
    this.scrollView = scrollView;
    this.todayEarningsCard = todayEarningsCard;
    this.todayEarningsText = todayEarningsText;
    this.toolbar = toolbar;
    this.totalEarningsText = totalEarningsText;
    this.viewAllButton = viewAllButton;
    this.weeklyChartCard = weeklyChartCard;
    this.weeklyEarningsChart = weeklyEarningsChart;
    this.weeklyEarningsText = weeklyEarningsText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEarningsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEarningsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_earnings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEarningsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigation;
      View bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }
      LayoutBottomNavigationBinding binding_bottomNavigation = LayoutBottomNavigationBinding.bind(bottomNavigation);

      id = R.id.contentView;
      ConstraintLayout contentView = ViewBindings.findChildViewById(rootView, id);
      if (contentView == null) {
        break missingId;
      }

      id = R.id.earningTimeframeText;
      TextView earningTimeframeText = ViewBindings.findChildViewById(rootView, id);
      if (earningTimeframeText == null) {
        break missingId;
      }

      id = R.id.earningsCards;
      ConstraintLayout earningsCards = ViewBindings.findChildViewById(rootView, id);
      if (earningsCards == null) {
        break missingId;
      }

      id = R.id.earningsHistoryCard;
      MaterialCardView earningsHistoryCard = ViewBindings.findChildViewById(rootView, id);
      if (earningsHistoryCard == null) {
        break missingId;
      }

      id = R.id.earningsHistoryRecyclerView;
      RecyclerView earningsHistoryRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (earningsHistoryRecyclerView == null) {
        break missingId;
      }

      id = R.id.earningsHistoryTitle;
      TextView earningsHistoryTitle = ViewBindings.findChildViewById(rootView, id);
      if (earningsHistoryTitle == null) {
        break missingId;
      }

      id = R.id.earningsSummaryCard;
      MaterialCardView earningsSummaryCard = ViewBindings.findChildViewById(rootView, id);
      if (earningsSummaryCard == null) {
        break missingId;
      }

      id = R.id.errorMessageText;
      TextView errorMessageText = ViewBindings.findChildViewById(rootView, id);
      if (errorMessageText == null) {
        break missingId;
      }

      id = R.id.errorView;
      LinearLayout errorView = ViewBindings.findChildViewById(rootView, id);
      if (errorView == null) {
        break missingId;
      }

      id = R.id.loadingView;
      FrameLayout loadingView = ViewBindings.findChildViewById(rootView, id);
      if (loadingView == null) {
        break missingId;
      }

      id = R.id.pendingEarningsCard;
      MaterialCardView pendingEarningsCard = ViewBindings.findChildViewById(rootView, id);
      if (pendingEarningsCard == null) {
        break missingId;
      }

      id = R.id.pendingEarningsText;
      TextView pendingEarningsText = ViewBindings.findChildViewById(rootView, id);
      if (pendingEarningsText == null) {
        break missingId;
      }

      id = R.id.retryButton;
      Button retryButton = ViewBindings.findChildViewById(rootView, id);
      if (retryButton == null) {
        break missingId;
      }

      id = R.id.scrollView;
      NestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.todayEarningsCard;
      MaterialCardView todayEarningsCard = ViewBindings.findChildViewById(rootView, id);
      if (todayEarningsCard == null) {
        break missingId;
      }

      id = R.id.todayEarningsText;
      TextView todayEarningsText = ViewBindings.findChildViewById(rootView, id);
      if (todayEarningsText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.totalEarningsText;
      TextView totalEarningsText = ViewBindings.findChildViewById(rootView, id);
      if (totalEarningsText == null) {
        break missingId;
      }

      id = R.id.viewAllButton;
      MaterialButton viewAllButton = ViewBindings.findChildViewById(rootView, id);
      if (viewAllButton == null) {
        break missingId;
      }

      id = R.id.weeklyChartCard;
      MaterialCardView weeklyChartCard = ViewBindings.findChildViewById(rootView, id);
      if (weeklyChartCard == null) {
        break missingId;
      }

      id = R.id.weeklyEarningsChart;
      LineChart weeklyEarningsChart = ViewBindings.findChildViewById(rootView, id);
      if (weeklyEarningsChart == null) {
        break missingId;
      }

      id = R.id.weeklyEarningsText;
      TextView weeklyEarningsText = ViewBindings.findChildViewById(rootView, id);
      if (weeklyEarningsText == null) {
        break missingId;
      }

      return new ActivityEarningsBinding((ConstraintLayout) rootView, binding_bottomNavigation,
          contentView, earningTimeframeText, earningsCards, earningsHistoryCard,
          earningsHistoryRecyclerView, earningsHistoryTitle, earningsSummaryCard, errorMessageText,
          errorView, loadingView, pendingEarningsCard, pendingEarningsText, retryButton, scrollView,
          todayEarningsCard, todayEarningsText, toolbar, totalEarningsText, viewAllButton,
          weeklyChartCard, weeklyEarningsChart, weeklyEarningsText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
