// Generated by view binder compiler. Do not edit!
package com.tranxortrider.deliveryrider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.tranxortrider.deliveryrider.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOrderDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout actionButtonsContainer;

  @NonNull
  public final LinearLayout bottomNav;

  @NonNull
  public final MaterialButton btnAWB;

  @NonNull
  public final MaterialButton btnBack;

  @NonNull
  public final MaterialButton btnCallRecipient;

  @NonNull
  public final MaterialButton btnCallSender;

  @NonNull
  public final MaterialButton btnMessageRecipient;

  @NonNull
  public final MaterialButton btnMessageSender;

  @NonNull
  public final MaterialButton callCustomerButton;

  @NonNull
  public final MaterialButton callRestaurantButton;

  @NonNull
  public final TextView customerPhoneText;

  @NonNull
  public final TextView deliveryAddressText;

  @NonNull
  public final TextView deliveryFeeText;

  @NonNull
  public final MaterialButton navigationButton;

  @NonNull
  public final RecyclerView orderItemsRecyclerView;

  @NonNull
  public final TextView paymentMethodText;

  @NonNull
  public final MaterialButton pickupButton;

  @NonNull
  public final MaterialButton primaryActionButton;

  @NonNull
  public final TextView restaurantPhoneText;

  @NonNull
  public final MaterialButton secondaryActionButton;

  @NonNull
  public final CardView specialInstructionsCard;

  @NonNull
  public final TextView specialInstructionsText;

  @NonNull
  public final ImageView statusIcon;

  @NonNull
  public final TextView subtotalText;

  @NonNull
  public final RelativeLayout topBar;

  @NonNull
  public final TextView totalAmountText;

  @NonNull
  public final TextView tvAssignedDate;

  @NonNull
  public final TextView tvBoxCount;

  @NonNull
  public final TextView tvCOD;

  @NonNull
  public final TextView tvOrderNumber;

  @NonNull
  public final TextView tvParcelType;

  @NonNull
  public final TextView tvParcelValue;

  @NonNull
  public final TextView tvRecipientAddress;

  @NonNull
  public final TextView tvRecipientName;

  @NonNull
  public final TextView tvReferenceId;

  @NonNull
  public final TextView tvSenderAddress;

  @NonNull
  public final TextView tvSenderName;

  @NonNull
  public final TextView tvStatus;

  private ActivityOrderDetailsBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout actionButtonsContainer, @NonNull LinearLayout bottomNav,
      @NonNull MaterialButton btnAWB, @NonNull MaterialButton btnBack,
      @NonNull MaterialButton btnCallRecipient, @NonNull MaterialButton btnCallSender,
      @NonNull MaterialButton btnMessageRecipient, @NonNull MaterialButton btnMessageSender,
      @NonNull MaterialButton callCustomerButton, @NonNull MaterialButton callRestaurantButton,
      @NonNull TextView customerPhoneText, @NonNull TextView deliveryAddressText,
      @NonNull TextView deliveryFeeText, @NonNull MaterialButton navigationButton,
      @NonNull RecyclerView orderItemsRecyclerView, @NonNull TextView paymentMethodText,
      @NonNull MaterialButton pickupButton, @NonNull MaterialButton primaryActionButton,
      @NonNull TextView restaurantPhoneText, @NonNull MaterialButton secondaryActionButton,
      @NonNull CardView specialInstructionsCard, @NonNull TextView specialInstructionsText,
      @NonNull ImageView statusIcon, @NonNull TextView subtotalText, @NonNull RelativeLayout topBar,
      @NonNull TextView totalAmountText, @NonNull TextView tvAssignedDate,
      @NonNull TextView tvBoxCount, @NonNull TextView tvCOD, @NonNull TextView tvOrderNumber,
      @NonNull TextView tvParcelType, @NonNull TextView tvParcelValue,
      @NonNull TextView tvRecipientAddress, @NonNull TextView tvRecipientName,
      @NonNull TextView tvReferenceId, @NonNull TextView tvSenderAddress,
      @NonNull TextView tvSenderName, @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.actionButtonsContainer = actionButtonsContainer;
    this.bottomNav = bottomNav;
    this.btnAWB = btnAWB;
    this.btnBack = btnBack;
    this.btnCallRecipient = btnCallRecipient;
    this.btnCallSender = btnCallSender;
    this.btnMessageRecipient = btnMessageRecipient;
    this.btnMessageSender = btnMessageSender;
    this.callCustomerButton = callCustomerButton;
    this.callRestaurantButton = callRestaurantButton;
    this.customerPhoneText = customerPhoneText;
    this.deliveryAddressText = deliveryAddressText;
    this.deliveryFeeText = deliveryFeeText;
    this.navigationButton = navigationButton;
    this.orderItemsRecyclerView = orderItemsRecyclerView;
    this.paymentMethodText = paymentMethodText;
    this.pickupButton = pickupButton;
    this.primaryActionButton = primaryActionButton;
    this.restaurantPhoneText = restaurantPhoneText;
    this.secondaryActionButton = secondaryActionButton;
    this.specialInstructionsCard = specialInstructionsCard;
    this.specialInstructionsText = specialInstructionsText;
    this.statusIcon = statusIcon;
    this.subtotalText = subtotalText;
    this.topBar = topBar;
    this.totalAmountText = totalAmountText;
    this.tvAssignedDate = tvAssignedDate;
    this.tvBoxCount = tvBoxCount;
    this.tvCOD = tvCOD;
    this.tvOrderNumber = tvOrderNumber;
    this.tvParcelType = tvParcelType;
    this.tvParcelValue = tvParcelValue;
    this.tvRecipientAddress = tvRecipientAddress;
    this.tvRecipientName = tvRecipientName;
    this.tvReferenceId = tvReferenceId;
    this.tvSenderAddress = tvSenderAddress;
    this.tvSenderName = tvSenderName;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOrderDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOrderDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_order_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOrderDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionButtonsContainer;
      LinearLayout actionButtonsContainer = ViewBindings.findChildViewById(rootView, id);
      if (actionButtonsContainer == null) {
        break missingId;
      }

      id = R.id.bottomNav;
      LinearLayout bottomNav = ViewBindings.findChildViewById(rootView, id);
      if (bottomNav == null) {
        break missingId;
      }

      id = R.id.btnAWB;
      MaterialButton btnAWB = ViewBindings.findChildViewById(rootView, id);
      if (btnAWB == null) {
        break missingId;
      }

      id = R.id.btnBack;
      MaterialButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnCallRecipient;
      MaterialButton btnCallRecipient = ViewBindings.findChildViewById(rootView, id);
      if (btnCallRecipient == null) {
        break missingId;
      }

      id = R.id.btnCallSender;
      MaterialButton btnCallSender = ViewBindings.findChildViewById(rootView, id);
      if (btnCallSender == null) {
        break missingId;
      }

      id = R.id.btnMessageRecipient;
      MaterialButton btnMessageRecipient = ViewBindings.findChildViewById(rootView, id);
      if (btnMessageRecipient == null) {
        break missingId;
      }

      id = R.id.btnMessageSender;
      MaterialButton btnMessageSender = ViewBindings.findChildViewById(rootView, id);
      if (btnMessageSender == null) {
        break missingId;
      }

      id = R.id.callCustomerButton;
      MaterialButton callCustomerButton = ViewBindings.findChildViewById(rootView, id);
      if (callCustomerButton == null) {
        break missingId;
      }

      id = R.id.callRestaurantButton;
      MaterialButton callRestaurantButton = ViewBindings.findChildViewById(rootView, id);
      if (callRestaurantButton == null) {
        break missingId;
      }

      id = R.id.customerPhoneText;
      TextView customerPhoneText = ViewBindings.findChildViewById(rootView, id);
      if (customerPhoneText == null) {
        break missingId;
      }

      id = R.id.deliveryAddressText;
      TextView deliveryAddressText = ViewBindings.findChildViewById(rootView, id);
      if (deliveryAddressText == null) {
        break missingId;
      }

      id = R.id.deliveryFeeText;
      TextView deliveryFeeText = ViewBindings.findChildViewById(rootView, id);
      if (deliveryFeeText == null) {
        break missingId;
      }

      id = R.id.navigationButton;
      MaterialButton navigationButton = ViewBindings.findChildViewById(rootView, id);
      if (navigationButton == null) {
        break missingId;
      }

      id = R.id.orderItemsRecyclerView;
      RecyclerView orderItemsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (orderItemsRecyclerView == null) {
        break missingId;
      }

      id = R.id.paymentMethodText;
      TextView paymentMethodText = ViewBindings.findChildViewById(rootView, id);
      if (paymentMethodText == null) {
        break missingId;
      }

      id = R.id.pickupButton;
      MaterialButton pickupButton = ViewBindings.findChildViewById(rootView, id);
      if (pickupButton == null) {
        break missingId;
      }

      id = R.id.primaryActionButton;
      MaterialButton primaryActionButton = ViewBindings.findChildViewById(rootView, id);
      if (primaryActionButton == null) {
        break missingId;
      }

      id = R.id.restaurantPhoneText;
      TextView restaurantPhoneText = ViewBindings.findChildViewById(rootView, id);
      if (restaurantPhoneText == null) {
        break missingId;
      }

      id = R.id.secondaryActionButton;
      MaterialButton secondaryActionButton = ViewBindings.findChildViewById(rootView, id);
      if (secondaryActionButton == null) {
        break missingId;
      }

      id = R.id.specialInstructionsCard;
      CardView specialInstructionsCard = ViewBindings.findChildViewById(rootView, id);
      if (specialInstructionsCard == null) {
        break missingId;
      }

      id = R.id.specialInstructionsText;
      TextView specialInstructionsText = ViewBindings.findChildViewById(rootView, id);
      if (specialInstructionsText == null) {
        break missingId;
      }

      id = R.id.statusIcon;
      ImageView statusIcon = ViewBindings.findChildViewById(rootView, id);
      if (statusIcon == null) {
        break missingId;
      }

      id = R.id.subtotalText;
      TextView subtotalText = ViewBindings.findChildViewById(rootView, id);
      if (subtotalText == null) {
        break missingId;
      }

      id = R.id.topBar;
      RelativeLayout topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      id = R.id.totalAmountText;
      TextView totalAmountText = ViewBindings.findChildViewById(rootView, id);
      if (totalAmountText == null) {
        break missingId;
      }

      id = R.id.tvAssignedDate;
      TextView tvAssignedDate = ViewBindings.findChildViewById(rootView, id);
      if (tvAssignedDate == null) {
        break missingId;
      }

      id = R.id.tvBoxCount;
      TextView tvBoxCount = ViewBindings.findChildViewById(rootView, id);
      if (tvBoxCount == null) {
        break missingId;
      }

      id = R.id.tvCOD;
      TextView tvCOD = ViewBindings.findChildViewById(rootView, id);
      if (tvCOD == null) {
        break missingId;
      }

      id = R.id.tvOrderNumber;
      TextView tvOrderNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderNumber == null) {
        break missingId;
      }

      id = R.id.tvParcelType;
      TextView tvParcelType = ViewBindings.findChildViewById(rootView, id);
      if (tvParcelType == null) {
        break missingId;
      }

      id = R.id.tvParcelValue;
      TextView tvParcelValue = ViewBindings.findChildViewById(rootView, id);
      if (tvParcelValue == null) {
        break missingId;
      }

      id = R.id.tvRecipientAddress;
      TextView tvRecipientAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvRecipientAddress == null) {
        break missingId;
      }

      id = R.id.tvRecipientName;
      TextView tvRecipientName = ViewBindings.findChildViewById(rootView, id);
      if (tvRecipientName == null) {
        break missingId;
      }

      id = R.id.tvReferenceId;
      TextView tvReferenceId = ViewBindings.findChildViewById(rootView, id);
      if (tvReferenceId == null) {
        break missingId;
      }

      id = R.id.tvSenderAddress;
      TextView tvSenderAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvSenderAddress == null) {
        break missingId;
      }

      id = R.id.tvSenderName;
      TextView tvSenderName = ViewBindings.findChildViewById(rootView, id);
      if (tvSenderName == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      return new ActivityOrderDetailsBinding((RelativeLayout) rootView, actionButtonsContainer,
          bottomNav, btnAWB, btnBack, btnCallRecipient, btnCallSender, btnMessageRecipient,
          btnMessageSender, callCustomerButton, callRestaurantButton, customerPhoneText,
          deliveryAddressText, deliveryFeeText, navigationButton, orderItemsRecyclerView,
          paymentMethodText, pickupButton, primaryActionButton, restaurantPhoneText,
          secondaryActionButton, specialInstructionsCard, specialInstructionsText, statusIcon,
          subtotalText, topBar, totalAmountText, tvAssignedDate, tvBoxCount, tvCOD, tvOrderNumber,
          tvParcelType, tvParcelValue, tvRecipientAddress, tvRecipientName, tvReferenceId,
          tvSenderAddress, tvSenderName, tvStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
