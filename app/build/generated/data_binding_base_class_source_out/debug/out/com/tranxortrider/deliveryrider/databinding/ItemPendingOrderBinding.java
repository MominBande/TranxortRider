// Generated by view binder compiler. Do not edit!
package com.tranxortrider.deliveryrider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tranxortrider.deliveryrider.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPendingOrderBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView customerAddressText;

  @NonNull
  public final TextView deliveryFeeText;

  @NonNull
  public final TextView distanceText;

  @NonNull
  public final TextView estimatedTimeText;

  @NonNull
  public final TextView orderAmountText;

  @NonNull
  public final TextView orderIdText;

  @NonNull
  public final TextView restaurantAddressText;

  @NonNull
  public final TextView restaurantNameText;

  @NonNull
  public final TextView timeText;

  private ItemPendingOrderBinding(@NonNull CardView rootView, @NonNull TextView customerAddressText,
      @NonNull TextView deliveryFeeText, @NonNull TextView distanceText,
      @NonNull TextView estimatedTimeText, @NonNull TextView orderAmountText,
      @NonNull TextView orderIdText, @NonNull TextView restaurantAddressText,
      @NonNull TextView restaurantNameText, @NonNull TextView timeText) {
    this.rootView = rootView;
    this.customerAddressText = customerAddressText;
    this.deliveryFeeText = deliveryFeeText;
    this.distanceText = distanceText;
    this.estimatedTimeText = estimatedTimeText;
    this.orderAmountText = orderAmountText;
    this.orderIdText = orderIdText;
    this.restaurantAddressText = restaurantAddressText;
    this.restaurantNameText = restaurantNameText;
    this.timeText = timeText;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPendingOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPendingOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_pending_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPendingOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.customerAddressText;
      TextView customerAddressText = ViewBindings.findChildViewById(rootView, id);
      if (customerAddressText == null) {
        break missingId;
      }

      id = R.id.deliveryFeeText;
      TextView deliveryFeeText = ViewBindings.findChildViewById(rootView, id);
      if (deliveryFeeText == null) {
        break missingId;
      }

      id = R.id.distanceText;
      TextView distanceText = ViewBindings.findChildViewById(rootView, id);
      if (distanceText == null) {
        break missingId;
      }

      id = R.id.estimatedTimeText;
      TextView estimatedTimeText = ViewBindings.findChildViewById(rootView, id);
      if (estimatedTimeText == null) {
        break missingId;
      }

      id = R.id.orderAmountText;
      TextView orderAmountText = ViewBindings.findChildViewById(rootView, id);
      if (orderAmountText == null) {
        break missingId;
      }

      id = R.id.orderIdText;
      TextView orderIdText = ViewBindings.findChildViewById(rootView, id);
      if (orderIdText == null) {
        break missingId;
      }

      id = R.id.restaurantAddressText;
      TextView restaurantAddressText = ViewBindings.findChildViewById(rootView, id);
      if (restaurantAddressText == null) {
        break missingId;
      }

      id = R.id.restaurantNameText;
      TextView restaurantNameText = ViewBindings.findChildViewById(rootView, id);
      if (restaurantNameText == null) {
        break missingId;
      }

      id = R.id.timeText;
      TextView timeText = ViewBindings.findChildViewById(rootView, id);
      if (timeText == null) {
        break missingId;
      }

      return new ItemPendingOrderBinding((CardView) rootView, customerAddressText, deliveryFeeText,
          distanceText, estimatedTimeText, orderAmountText, orderIdText, restaurantAddressText,
          restaurantNameText, timeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
